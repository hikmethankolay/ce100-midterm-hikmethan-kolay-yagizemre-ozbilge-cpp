<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="rental__management__lib_8h" kind="file" language="C++">
    <compoundname>rental_management_lib.h</compoundname>
    <includedby refid="rental__management__app_8cpp" local="yes">src/rental_management_app/src/rental_management_app.cpp</includedby>
    <includedby refid="rental__management__lib_8cpp" local="yes">src/rental_management_lib/src/rental_management_lib.cpp</includedby>
    <invincdepgraph>
      <node id="2">
        <label>src/rental_management_app/src/rental_management_app.cpp</label>
        <link refid="rental__management__app_8cpp"/>
      </node>
      <node id="1">
        <label>src/rental_management_lib/header/rental_management_lib.h</label>
        <link refid="rental__management__lib_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/rental_management_lib/src/rental_management_lib.cpp</label>
        <link refid="rental__management__lib_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="rental__management__lib_8h_1a1717462d7b3af047b844c81f67277057" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int file_write</definition>
        <argsstring>(const char *file_name, const char *text)</argsstring>
        <name>file_write</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Opens a binary file, deletes all of its content, and writes given text to it. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the file to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to write. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success.</para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the file to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to write. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rental_management_lib/header/rental_management_lib.h" line="17" column="5" bodyfile="src/rental_management_lib/src/rental_management_lib.cpp" bodystart="15" bodyend="36" declfile="src/rental_management_lib/header/rental_management_lib.h" declline="17" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="rental__management__lib_8h_1a8825f65171435cb417c7f14fb9ad1b4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * file_read</definition>
        <argsstring>(const char *file_name)</argsstring>
        <name>file_read</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
<para>Opens a binary file, reads all of its content, separates lines with &quot;\n&quot;, and writes them to console. Also returns the contents of the file as a string for unit tests. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the file to read from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The contents of the file as a dynamically allocated string.</para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the file to read from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The contents of the file as a dynamically allocated string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rental_management_lib/header/rental_management_lib.h" line="26" column="6" bodyfile="src/rental_management_lib/src/rental_management_lib.cpp" bodystart="44" bodyend="83" declfile="src/rental_management_lib/header/rental_management_lib.h" declline="26" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="rental__management__lib_8h_1a1f8a16f9b21069257fb67e2699b8e600" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int file_append</definition>
        <argsstring>(const char *file_name, const char *text)</argsstring>
        <name>file_append</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Appends given text to a binary file with an automatic calculated line number. Calculates new lines line number by finding the last line&apos;s line number. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the file to append to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to append to the file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on failure.</para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the file to append to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to append to the file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rental_management_lib/header/rental_management_lib.h" line="37" column="5" bodyfile="src/rental_management_lib/src/rental_management_lib.cpp" bodystart="93" bodyend="142" declfile="src/rental_management_lib/header/rental_management_lib.h" declline="37" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="rental__management__lib_8h_1a6d0977386bba126252ea385ad0edad5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int file_edit</definition>
        <argsstring>(const char *file_name, int line_number_to_edit, const char *new_line)</argsstring>
        <name>file_edit</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line_number_to_edit</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>new_line</declname>
        </param>
        <briefdescription>
<para>This function opens a binary file, finds the line that the user wants to edit, and replaces it with new text. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the file to edit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line_number_to_edit</parametername>
</parameternamelist>
<parameterdescription>
<para>The line number to edit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_line</parametername>
</parameternamelist>
<parameterdescription>
<para>The new text to replace the existing line. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success.</para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the file to edit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line_number_to_edit</parametername>
</parameternamelist>
<parameterdescription>
<para>The line number to edit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_line</parametername>
</parameternamelist>
<parameterdescription>
<para>The new text to replace the existing line. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rental_management_lib/header/rental_management_lib.h" line="47" column="5" bodyfile="src/rental_management_lib/src/rental_management_lib.cpp" bodystart="152" bodyend="212" declfile="src/rental_management_lib/header/rental_management_lib.h" declline="47" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="rental__management__lib_8h_1ac4d60bc5920d299f6d1aded994288ec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int file_line_delete</definition>
        <argsstring>(const char *file_name, int line_number_to_delete)</argsstring>
        <name>file_line_delete</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line_number_to_delete</declname>
        </param>
        <briefdescription>
<para>Opens a binary file, deletes the line the user wanted, and makes adjustments on the line number accordingly. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the file to delete the line from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line_number_to_delete</parametername>
</parameternamelist>
<parameterdescription>
<para>The line number to delete. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success.</para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the file to delete the line from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line_number_to_delete</parametername>
</parameternamelist>
<parameterdescription>
<para>The line number to delete. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rental_management_lib/header/rental_management_lib.h" line="56" column="5" bodyfile="src/rental_management_lib/src/rental_management_lib.cpp" bodystart="221" bodyend="296" declfile="src/rental_management_lib/header/rental_management_lib.h" declline="56" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides functions for rental_management_app. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RENTAL_MANAGEMENT_LIB_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RENTAL_MANAGEMENT_LIB_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rental__management__lib_8h_1a1717462d7b3af047b844c81f67277057" kindref="member">file_write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="rental__management__lib_8h_1a8825f65171435cb417c7f14fb9ad1b4f" kindref="member">file_read</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rental__management__lib_8h_1a1f8a16f9b21069257fb67e2699b8e600" kindref="member">file_append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rental__management__lib_8h_1a6d0977386bba126252ea385ad0edad5b" kindref="member">file_edit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_number_to_edit,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*new_line);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rental__management__lib_8h_1ac4d60bc5920d299f6d1aded994288ec0" kindref="member">file_line_delete</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_number_to_delete);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>RENTAL_MANAGEMENT_LIB_H</highlight></codeline>
    </programlisting>
    <location file="src/rental_management_lib/header/rental_management_lib.h"/>
  </compounddef>
</doxygen>
